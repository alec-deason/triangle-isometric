{:rename-macros {}, :renames {}, :externs {Number {NEGATIVE_INFINITY {}}}, :use-macros {}, :excludes #{}, :name my-sketch.terrain, :imports nil, :requires {q quil.core, quil.core quil.core}, :uses nil, :defs {make-grid {:protocol-inline nil, :meta {:file "/home/alec/Documents/Code/my-sketch/src/my_sketch/terrain.cljs", :line 5, :column 7, :end-line 5, :end-column 16, :arglists (quote ([width height depth]))}, :name my-sketch.terrain/make-grid, :variadic false, :file "/home/alec/Documents/Code/my-sketch/src/my_sketch/terrain.cljs", :end-column 16, :method-params ([width height depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([width height depth]))}, elevation {:protocol-inline nil, :meta {:file "/home/alec/Documents/Code/my-sketch/src/my_sketch/terrain.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([x y grid]))}, :name my-sketch.terrain/elevation, :variadic false, :file "/home/alec/Documents/Code/my-sketch/src/my_sketch/terrain.cljs", :end-column 16, :method-params ([x y grid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y grid]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:block :empty}, :order [:empty :block]}, :doc nil}